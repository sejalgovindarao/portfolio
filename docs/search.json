[
  {
    "objectID": "assignment_chartsmaps_yournamehere.html",
    "href": "assignment_chartsmaps_yournamehere.html",
    "title": "Charts & Maps Walkthrough",
    "section": "",
    "text": "Introduction\nFor this assignment you’ll be making a few charts and maps using the ggplot2 and tmap packages we discussed in the last class session.\nTo help in your efforts, do feel free to make use of and adapt the materials we went over in class, which are located here.\nThe data used for this assignment includes Georgia election results by county for U.S. Senate and Governor in 2022, President in 2020, and then some of the same socioeconomic factors we’ve looked at other contexts so far during the semester.\n\nLoading the Data\nThe first step is to load in the data, which is stored in the ga_votes.xlsx Excel file that’s included in this repository. As you’ll see if you open the spreadsheet itself, there are two tabs - one contains the senate results, and one contains the governor results.\nWe’ll load them separately into two datasets to be used for the remainder of this assignment.\n\n#import the GA election data for this assignment\n\n#GA senate\nsenate_results <- read_excel(here(\"ga_votes.xlsx\"), sheet = \"senate\")\n\n#GA governor\ngovernor_results <- read_excel(here(\"ga_votes.xlsx\"), sheet = \"governor\")\n\nTwo columns in particular to highlight that we’ll use to examine how the Republican Senate and Governor candidates did compared with former President Trump’s performance in 2020:\n\npct_r_above_trump. This column calculates the difference in percentage points between what the 2022 Republican candidate got (pct_r_2022) and what Trump got two years earlier (pct_r_2020). A negative value means the candidate did worse than Trump, a positive value means they did better.\nis_r_above_trump. This companion columns is a so-called “flag” column, which provides a Yes/No as to whether the Republican candidate did better or worse than Trump. In other words, is the pct_r_above_trump value positive or negative.\n\n\n\n\nCharts\nFor this section use the ggplot2 package to create your charts.\n1)\nFor the Senate race, create a column/bar chart that shows how many counties the Republican candidate did better vs. worse than Trump.\n\nSenateRepublicanCandidateAsComparedToTrump <- senate_results %>% \ncount(is_r_above_trump)\n\nggplot(SenateRepublicanCandidateAsComparedToTrump, aes(x = is_r_above_trump, y = n)) +\n  geom_col()\n\n\n\n\n2)\nNow do the same as Question 1, just this time do it for the race for Governor.\n\nRGovsComparedToTrump <- governor_results %>% \ncount(is_r_above_trump)\n\nggplot(RGovsComparedToTrump, aes(x = is_r_above_trump, y = n)) +\n  geom_col()\n\n\n\n\n3)\nFor the Senate race, create a chart that shows the top 10 biggest drops between the Republican candidate and Trump (i.e. the 10 counties with the most substantial negative numbers in pct_r_above_trump). Remember that you can slice off a certain number of rows using the head() function, i.e. head(5), head(20), etc.\nYour chart should be sorted from the biggest drop to the smallest among the top 10 counties.\n\nTop10 <- senate_results %>% \n  arrange(pct_r_above_trump) %>% \n  head(10)\n\nggplot(Top10, aes(x = reorder(county,pct_r_above_trump), y = pct_r_above_trump)) +\n  geom_col() +\n  coord_flip()\n\n\n\n\n4)\nFor the Senate race, create a chart that shows the top 10 counties highest margins of victory for the Democratic candidate. To do that you’ll need to compare the Democratic candidate’s percentage (pct_d_2022) with the Republican’s (pct_r_2022) to calculate the margin of victory for each county.\n\nMarginOfVictory <- senate_results %>% \n  mutate(margin_vic = (pct_d_2022 - pct_r_2022)) \n\nSenate10MOV <- MarginOfVictory %>% \n  arrange(desc(margin_vic)) %>% head(10)\n\nggplot(Senate10MOV, aes(x = reorder(county, -margin_vic), y = margin_vic)) + \n  geom_col()\n\n\n\n\n5)\nNow do the same as Question 4, only this time for the race for Governor instead.\n\nMOV_GOV <- governor_results %>% \n  mutate(govMOV = (pct_d_2022 - pct_r_2022))\n\nGov10MOV <- MOV_GOV %>% \n  arrange(desc(govMOV)) %>%  head(10)\n\nggplot(Gov10MOV, aes(x = reorder(county, -govMOV), y = govMOV)) + \n  geom_col()\n\n\n\n\n\n\nMaps\nFor this section use the tmap package to create your charts.\nTo help start things out for you, we’re going to download a geospatial/map dataset with the county boundaries for Georgia. We’ll use the tigris package to do this.\n\ncounties_geo <- tigris::counties(state = \"GA\", resolution = \"20m\", cb = TRUE)\n\nRetrieving data for the year 2020\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |===========                                                           |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |==============                                                        |  19%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |=================================                                     |  48%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |========================================                              |  58%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |=================================================                     |  71%\n  |                                                                            \n  |===================================================                   |  72%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |======================================================================| 100%\n\n\nNow let’s take a look at what we have, by mapping out the polygons of the Georgia counties using the tmap package.\n\ntm_shape(counties_geo) + \n  tm_polygons()\n\n\n\n\nGreat, it looks like we should be good to go. Use the newly created map data in counties_geo along with our election results datasets to complete the questions below.\n7)\nFor the Senate race, create a choropleth (shaded) map of Georgia counties that shows where the Republican candidate for Senate did better vs. worse than Trump.\n\nsenatemap <- inner_join(counties_geo, senate_results, by = c(\"GEOID\" = \"fipsCode\"))\ntm_shape(senatemap) +\n  tm_polygons(\"is_r_above_trump\", id = \"GEOID\")\n\n\n\n\n8)\nNow do the same as Question 7, just this time do it for the race for Governor.\n\ngovmap <- inner_join(counties_geo, governor_results, by = c(\"GEOID\" = \"fipsCode\"))\ntmap_mode(mode = \"plot\")\n\ntmap mode set to plotting\n\ntm_shape(govmap) +\n  tm_polygons(\"is_r_above_trump\", id = \"GEOID\")\n\n\n\n\n9)\nFor the Senate race, create a choropleth map that shows the margins of victory for the Democratic candidate. To do that you’ll need to compare the Democratic candidate’s percentage (pct_d_2022) with the Republican’s (pct_r_2022) to calculate the margin of victory for each county.\n\nSenVictoryMargins <- inner_join(counties_geo, MarginOfVictory, by = c(\"GEOID\" = \"fipsCode\"))\ntmap_mode(mode = \"plot\")\n\ntmap mode set to plotting\n\ntm_shape(SenVictoryMargins) + \n  tm_polygons(\"margin_vic\", id = \"GEOID\")\n\nVariable(s) \"margin_vic\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n10)\nNow do the same as Question 4, only this time for the race for Governor instead.\n\nGovChloroMap <- inner_join(counties_geo, MOV_GOV, by = c(\"GEOID\" = \"fipsCode\"))\ntmap_mode(mode = \"plot\")\n\ntmap mode set to plotting\n\ntm_shape(GovChloroMap) + \n  tm_polygons(\"govMOV\", id = \"GEOID\")\n\nVariable(s) \"govMOV\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sejal Govindarao",
    "section": "",
    "text": "Hi there, I’m Sejal Govindarao. I’m an aspiring political reporter. I just wrapped up a 6-month internship covering Congress with NBC’s Capitol Hill team and am seeking new journalistic opportunities."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Sejal Govindarao",
    "section": "Education",
    "text": "Education\nGeorge Washington University | Political Communication | 2020-2024"
  },
  {
    "objectID": "index.html#work-experience",
    "href": "index.html#work-experience",
    "title": "Sejal Govindarao",
    "section": "Work Experience",
    "text": "Work Experience\nNBC | Capitol Hill Intern | June 2022 - December 2022\nABC | Penn Ave/ Digital Intern | January 2022 - May 2022\nCNN | Anderson Cooper 360 Intern | October 2021 - December 2021"
  },
  {
    "objectID": "index.html#technical-skills",
    "href": "index.html#technical-skills",
    "title": "Sejal Govindarao",
    "section": "Technical Skills",
    "text": "Technical Skills\nAP Style\niNEWS, NewsApps, MIRA, Media Central, NewsMonitors\nAdobe: Photoshop, Premiere, Lightroom, Audition\nPanasonic CX-350, DSLR\nWeb Design: Wix, Wordpress\nSocial Media: Twitter, Instagram, Snapchat, LinkedIn, Facebook"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "about.html#writing-sample",
    "href": "about.html#writing-sample",
    "title": "About",
    "section": "Writing Sample",
    "text": "Writing Sample\nArticle"
  },
  {
    "objectID": "Portfolio.html",
    "href": "Portfolio.html",
    "title": "Portfolio",
    "section": "",
    "text": "Learn more about Sejal’s journalistic experience."
  },
  {
    "objectID": "02_virginia_election_project_youranalysis.html",
    "href": "02_virginia_election_project_youranalysis.html",
    "title": "Virginia Election Project",
    "section": "",
    "text": "Comparing Virgnia Gov vs. Prez\n\nhead(joined_vacomparison)\n\n# A tibble: 6 × 9\n  locality         biden trump biden_pct trump…¹ young…² mcaul…³ pct_y…⁴ pct_m…⁵\n  <chr>            <dbl> <dbl>     <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>\n1 ACCOMACK COUNTY   7578  9172      44.7    54.1    7878    4948    61.1    38.4\n2 ALBEMARLE COUNTY 42466 20804      65.7    32.2   19141   31919    37.2    62.0\n3 ALEXANDRIA CITY  66240 14544      80.3    17.6   14013   43866    24.0    75.2\n4 ALLEGHANY COUNTY  2243  5859      27.3    71.4    4530    1518    74.5    25.0\n5 AMELIA COUNTY     2411  5390      30.6    68.3    4720    1617    74.2    25.4\n6 AMHERST COUNTY    5672 11041      33.4    64.9    9731    3897    71      28.4\n# … with abbreviated variable names ¹​trump_pct, ²​youngkin, ³​mcauliffe,\n#   ⁴​pct_youngkin, ⁵​pct_mcauliffe\n\n\n\njoined_vacomparison = joined_vacomparison %>% \n  mutate(YoungkinADV = pct_youngkin - trump_pct)\nhead(joined_vacomparison)\n\n# A tibble: 6 × 10\n  locality   biden trump biden…¹ trump…² young…³ mcaul…⁴ pct_y…⁵ pct_m…⁶ Young…⁷\n  <chr>      <dbl> <dbl>   <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>   <dbl>\n1 ACCOMACK …  7578  9172    44.7    54.1    7878    4948    61.1    38.4    7.01\n2 ALBEMARLE… 42466 20804    65.7    32.2   19141   31919    37.2    62.0    5.03\n3 ALEXANDRI… 66240 14544    80.3    17.6   14013   43866    24.0    75.2    6.39\n4 ALLEGHANY…  2243  5859    27.3    71.4    4530    1518    74.5    25.0    3.09\n5 AMELIA CO…  2411  5390    30.6    68.3    4720    1617    74.2    25.4    5.90\n6 AMHERST C…  5672 11041    33.4    64.9    9731    3897    71      28.4    6.07\n# … with abbreviated variable names ¹​biden_pct, ²​trump_pct, ³​youngkin,\n#   ⁴​mcauliffe, ⁵​pct_youngkin, ⁶​pct_mcauliffe, ⁷​YoungkinADV\n\n\n\nTOP5 <- joined_vacomparison %>% \n  arrange(desc(YoungkinADV)) %>% \n  slice(1:5)\n\nggplot(TOP5, aes(x = locality, y = YoungkinADV)) +\n  geom_bar(stat=\"identity\", fill=\"coral\")+\n  scale_x_discrete(guide = guide_axis(n.dodge=3))\n\n\n\n\n\nYOUNGKIN_5 <- joined_vacomparison %>% \n  arrange(desc(pct_youngkin)) %>% \n  slice(1:5)\n\nggplot(YOUNGKIN_5, aes(x = locality, y = pct_youngkin)) +\n  geom_bar(stat=\"identity\", fill=\"darkred\")+\n  scale_x_discrete(guide = guide_axis(n.dodge=3))\n\n\n\n\n\nMCAULIFFE_5 <- joined_vacomparison %>% \n  arrange(desc(pct_mcauliffe)) %>% \n  slice(1:5)\n\nggplot(MCAULIFFE_5, aes(x = locality, y = pct_mcauliffe)) +\n  geom_bar(stat=\"identity\", fill=\"steelblue\")+\n  scale_x_discrete(guide = guide_axis(n.dodge=3))\n\n\n\n\n\njoined_vacomparison = joined_vacomparison %>% \n  mutate(biden_adv = biden_pct - pct_mcauliffe)\n\nBIDEN_ADV <- joined_vacomparison %>% \n  arrange(desc(biden_adv)) %>% \n  slice(1:5)\n\nggplot(BIDEN_ADV, aes(x = locality, y = biden_adv)) +\n  geom_bar(stat=\"identity\", fill=\"navy\")+\n  scale_x_discrete(guide = guide_axis(n.dodge=3))\n\n\n\n\n\njoined_vacomparison = joined_vacomparison %>% \n  mutate(biden20_adv = biden_pct - trump_pct)\n\nBIDEN20_ADV <- joined_vacomparison %>% \n  arrange(desc(biden20_adv)) %>% \n  slice(1:5)\n\nggplot(BIDEN20_ADV, aes(x = locality, y = biden20_adv)) +\n  geom_bar(stat=\"identity\", fill=\"purple\")+\n  scale_x_discrete(guide = guide_axis(n.dodge=3))\n\n\n\n\n\njoined_vacomparison = joined_vacomparison %>% \n  mutate(trump20_adv = trump_pct - biden_pct)\n\nTRUMP20_ADV <- joined_vacomparison %>% \n  arrange(desc(trump20_adv)) %>% \n  slice(1:5)\n\nggplot(TRUMP20_ADV, aes(x = locality, y = trump20_adv)) +\n  geom_bar(stat=\"identity\", fill=\"orange\")+\n  scale_x_discrete(guide = guide_axis(n.dodge=3))"
  },
  {
    "objectID": "walkthrough.html",
    "href": "walkthrough.html",
    "title": "Virginia Election Project",
    "section": "",
    "text": "Comparing Virgnia Gov vs. Prez\nIn this analysis walkthrough, we will be looking at Virginia election results by county. We will compare the 2020 Presidential Election and 2021 Gubernatorial Election – this is particularly interesting because Biden, a Democrat, won in 2020 while Youngkin, a Republican, won in 2021.\nIn this first table, we will see a breakdown by county of the margins by which Trump, Biden, McAuliffe and Youngkin faired. Check out the interactive data table!\n\nDT::datatable(joined_vacomparison)\n\n\n\n\n\n\nThis next table adds a column at the end, illustrating how many points Youngkin held over Trump in each respective county.\n\njoined_vacomparison = joined_vacomparison %>% \n  mutate(YoungkinADV = pct_youngkin - trump_pct)\nhead(joined_vacomparison)\n\n# A tibble: 6 × 10\n  locality   biden trump biden…¹ trump…² young…³ mcaul…⁴ pct_y…⁵ pct_m…⁶ Young…⁷\n  <chr>      <dbl> <dbl>   <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>   <dbl>\n1 ACCOMACK …  7578  9172    44.7    54.1    7878    4948    61.1    38.4    7.01\n2 ALBEMARLE… 42466 20804    65.7    32.2   19141   31919    37.2    62.0    5.03\n3 ALEXANDRI… 66240 14544    80.3    17.6   14013   43866    24.0    75.2    6.39\n4 ALLEGHANY…  2243  5859    27.3    71.4    4530    1518    74.5    25.0    3.09\n5 AMELIA CO…  2411  5390    30.6    68.3    4720    1617    74.2    25.4    5.90\n6 AMHERST C…  5672 11041    33.4    64.9    9731    3897    71      28.4    6.07\n# … with abbreviated variable names ¹​biden_pct, ²​trump_pct, ³​youngkin,\n#   ⁴​mcauliffe, ⁵​pct_youngkin, ⁶​pct_mcauliffe, ⁷​YoungkinADV\n\n\nNext, we have a bar chart that hones in on the analysis we saw in the prior table – this chart focuses on the top 5 counties where Youngkin in 2021 held the highest percentage of the vote as compared to Trump in 2020.\n\nTOP5 <- joined_vacomparison %>% \n  arrange(desc(YoungkinADV)) %>% \n  slice(1:5)\n\nggplot(TOP5, aes(x = locality, y = YoungkinADV)) +\n  geom_bar(stat=\"identity\", fill=\"coral\")+\n  scale_x_discrete(guide = guide_axis(n.dodge=3))\n\n\n\n\nThis bar chart isolates Youngkin in 2021, illustrating the top 5 counties he performed best in.\n\nYOUNGKIN_5 <- joined_vacomparison %>% \n  arrange(desc(pct_youngkin)) %>% \n  slice(1:5)\n\nggplot(YOUNGKIN_5, aes(x = locality, y = pct_youngkin)) +\n  geom_bar(stat=\"identity\", fill=\"darkred\")+\n  scale_x_discrete(guide = guide_axis(n.dodge=3))\n\n\n\n\nSimilarly, this bar chart illustrates the top 5 counties McAuliffe performed best in during the 2021 VA Election.\n\nMCAULIFFE_5 <- joined_vacomparison %>% \n  arrange(desc(pct_mcauliffe)) %>% \n  slice(1:5)\n\nggplot(MCAULIFFE_5, aes(x = locality, y = pct_mcauliffe)) +\n  geom_bar(stat=\"identity\", fill=\"steelblue\")+\n  scale_x_discrete(guide = guide_axis(n.dodge=3))\n\n\n\n\nHere we see a comparison between Biden and McAuliffe, illustrating the top 5 counties Biden outperformed McAuliffe in.\n\njoined_vacomparison = joined_vacomparison %>% \n  mutate(biden_adv = biden_pct - pct_mcauliffe)\n\nBIDEN_ADV <- joined_vacomparison %>% \n  arrange(desc(biden_adv)) %>% \n  slice(1:5)\n\nggplot(BIDEN_ADV, aes(x = locality, y = biden_adv)) +\n  geom_bar(stat=\"identity\", fill=\"navy\")+\n  scale_x_discrete(guide = guide_axis(n.dodge=3))\n\n\n\n\nWe now see the top 5 counties in Virginia Biden outperformed Trump in 2020.\n\njoined_vacomparison = joined_vacomparison %>% \n  mutate(biden20_adv = biden_pct - trump_pct)\n\nBIDEN20_ADV <- joined_vacomparison %>% \n  arrange(desc(biden20_adv)) %>% \n  slice(1:5)\n\nggplot(BIDEN20_ADV, aes(x = locality, y = biden20_adv)) +\n  geom_bar(stat=\"identity\", fill=\"purple\")+\n  scale_x_discrete(guide = guide_axis(n.dodge=3))\n\n\n\n\nAnd, conversely, here are the top 5 counties in Virginia Trump outperformed Biden in 2020.\n\njoined_vacomparison = joined_vacomparison %>% \n  mutate(trump20_adv = trump_pct - biden_pct)\n\nTRUMP20_ADV <- joined_vacomparison %>% \n  arrange(desc(trump20_adv)) %>% \n  slice(1:5)\n\nggplot(TRUMP20_ADV, aes(x = locality, y = trump20_adv)) +\n  geom_bar(stat=\"identity\", fill=\"orange\")+\n  scale_x_discrete(guide = guide_axis(n.dodge=3))"
  }
]